{"ast":null,"code":"var _jsxFileName = \"/Users/dmytrokurinnyi/Desktop/wether/wethe/src/App.js\";\nimport React from \"react\";\nimport Mean from \"./components/mean\";\nimport Form from \"./components/form\";\nimport Wethe_aut from \"./components/wethe _autt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"0ba9122c7db41155430fb755e75d71e0\";\nconst London_API = \"(`https://api.openweathermap.org/data/2.5/onecall?lat=51.30&lon=0.07&appid=${API_key}&lang=ru&units=metric`\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      pressure: undefined,\n      error: undefined\n    };\n\n    this.gettingWether = async e => {\n      e.preventDefault();\n      const exclude = e.target.elements.exclude.value;\n      const city = e.target.elements.city.value; //const lon = ;\n\n      if (exclude === \"minutely\") {\n        if (city === \"London\") {\n          const api_url = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=51.30&lon=0.07&appid=${API_key}&lang=ru&units=metric`);\n          const date = await api_url.json();\n          this.setState({\n            temp: date.current.temp,\n            city: date.timezone,\n            pressure: date.current.pressure,\n            error: \"\"\n          });\n        }\n\n        if (city === \"Moscow\") {\n          const api_url = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=55.45&lon=37.36&exclude=hourly&appid=${API_key}&lang=ru&units=metric`);\n          const date = await api_url.json();\n          console.log(date);\n          this.setState({\n            temp: date.current.temp,\n            city: date.timezone,\n            pressure: date.current.pressure,\n            error: \"\"\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Mean, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        wetherMetod: this.gettingWether,\n        positionMetod: this.getPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wethe_aut, {\n        temp: this.state.temp,\n        city: this.state.city,\n        pressure: this.state.pressure,\n        error: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dmytrokurinnyi/Desktop/wether/wethe/src/App.js"],"names":["React","Mean","Form","Wethe_aut","API_key","London_API","App","Component","state","temp","undefined","city","pressure","error","gettingWether","e","preventDefault","exclude","target","elements","value","api_url","fetch","date","json","setState","current","timezone","console","log","render","getPosition"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;AACA,MAAMC,UAAU,GAAG,6GAAnB;;AAIA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GAC1B;AACJC,MAAAA,IAAI,EAACC,SADD;AAEJC,MAAAA,IAAI,EAACD,SAFD;AAGJE,MAAAA,QAAQ,EAAEF,SAHN;AAIJG,MAAAA,KAAK,EAACH;AAJF,KAD0B;;AAAA,SAiBhCI,aAjBgC,GAiBhB,MAAMC,CAAN,IAAU;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,OAAO,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,OAAlB,CAA0BG,KAA1C;AACA,YAAMT,IAAI,GAAGI,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBR,IAAlB,CAAuBS,KAApC,CAHwB,CAOxB;;AAEA,UAAGH,OAAO,KAAK,UAAf,EAA0B;AAC1B,YAAGN,IAAI,KAAK,QAAZ,EAAqB;AACrB,gBAAMU,OAAO,GAAG,MAChBC,KAAK,CAAE,4EAA2ElB,OAAQ,uBAArF,CADL;AAEA,gBAAMmB,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AAGA,eAAKC,QAAL,CAAc;AACZhB,YAAAA,IAAI,EAACc,IAAI,CAACG,OAAL,CAAajB,IADN;AAEZE,YAAAA,IAAI,EAACY,IAAI,CAACI,QAFE;AAGZf,YAAAA,QAAQ,EAACW,IAAI,CAACG,OAAL,CAAad,QAHV;AAIZC,YAAAA,KAAK,EAAC;AAJM,WAAd;AASD;;AACD,YAAGF,IAAI,KAAK,QAAZ,EAAqB;AACnB,gBAAMU,OAAO,GAAG,MAChBC,KAAK,CAAE,4FAA2FlB,OAAQ,uBAArG,CADL;AAEA,gBAAMmB,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAGA,eAAKE,QAAL,CAAc;AACZhB,YAAAA,IAAI,EAACc,IAAI,CAACG,OAAL,CAAajB,IADN;AAEZE,YAAAA,IAAI,EAACY,IAAI,CAACI,QAFE;AAGZf,YAAAA,QAAQ,EAACW,IAAI,CAACG,OAAL,CAAad,QAHV;AAIZC,YAAAA,KAAK,EAAC;AAJM,WAAd;AAQD;AAGF;AACE,KA9D+B;AAAA;;AA+DhCiB,EAAAA,MAAM,GAAE;AACN,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AACA,QAAA,WAAW,EAAI,KAAKhB,aADpB;AAEA,QAAA,aAAa,EAAI,KAAKiB;AAFtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,SAAD;AACA,QAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWC,IADjB;AAEA,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFjB;AAGA,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAHrB;AAIA,QAAA,KAAK,EAAK,KAAKJ,KAAL,CAAWK;AAJrB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAjF+B;;AAoFlC,eAAeP,GAAf","sourcesContent":["import React from \"react\";\nimport Mean from \"./components/mean\";\nimport Form from \"./components/form\";\nimport Wethe_aut from \"./components/wethe _autt\";\n\nconst API_key = \"0ba9122c7db41155430fb755e75d71e0\";\nconst London_API = \"(`https://api.openweathermap.org/data/2.5/onecall?lat=51.30&lon=0.07&appid=${API_key}&lang=ru&units=metric`\"\n\n\n\nclass App extends React.Component {\n  state={\n    temp:undefined,\n    city:undefined,\n    pressure: undefined,\n    error:undefined\n\n  }\n\n  //getPosition = ()=>{\n  //  navigator.geolocation.getCurrentPosition((pos)=>{\n  //     const lat= pos.coords.latitude\n  //     const lon= pos.coords.longitude\n  //     console.log(lat,lon)\n  //     \n  //  })\n//}\n  gettingWether = async(e)=>{\n    e.preventDefault();\n    const exclude = e.target.elements.exclude.value;\n    const city = e.target.elements.city.value;\n   \n    \n\n    //const lon = ;\n\n    if(exclude === \"minutely\"){\n    if(city === \"London\"){\n    const api_url = await\n    fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=51.30&lon=0.07&appid=${API_key}&lang=ru&units=metric`)\n    const date = await api_url.json()\n\n  \n    this.setState({\n      temp:date.current.temp,\n      city:date.timezone,\n      pressure:date.current.pressure,\n      error:\"\"\n\n\n    })\n\n  }\n  if(city === \"Moscow\"){\n    const api_url = await\n    fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=55.45&lon=37.36&exclude=hourly&appid=${API_key}&lang=ru&units=metric`)\n    const date = await api_url.json()\n    console.log(date)\n\n  \n    this.setState({\n      temp:date.current.temp,\n      city:date.timezone,\n      pressure:date.current.pressure,\n      error:\"\"\n\n\n    })\n  }\n  \n\n}\n  }\n  render(){\n    return(\n      <React.Fragment>\n        <Mean/>\n        <Form \n        wetherMetod = {this.gettingWether}\n        positionMetod = {this.getPosition}/>\n        <Wethe_aut\n        temp={this.state.temp}\n        city={this.state.city}\n        pressure={this.state.pressure}\n        error  = {this.state.error}\n        />\n      </React.Fragment>\n\n      \n\n    );\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}