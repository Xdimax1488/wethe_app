{"ast":null,"code":"var _jsxFileName = \"/Users/dmytrokurinnyi/Desktop/git/wethe_app/src/App.js\";\nimport React from \"react\";\nimport I from \"./components/mean\";\nimport Form from \"./components/form\";\nimport WetheAutt from \"./components/wethe _autt\";\nimport HurlyWeather from \"./components/HurlyWeather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"0ba9122c7db41155430fb755e75d71e0\";\nconst London_API = `https://api.openweathermap.org/data/2.5/onecall?lat=51.30&lon=0.07&appid=${API_key}&lang=ru&units=metric`;\nconst Moscow_API = `https://api.openweathermap.org/data/2.5/onecall?lat=55.45&lon=37.36&appid=${API_key}&lang=ru&units=metric`;\nconst Kiev_API = `https://api.openweathermap.org/data/2.5/onecall?lat=50.27&lon=30.31&appid=${API_key}&lang=ru&units=metric`;\nconst Warshawa_API = `https://api.openweathermap.org/data/2.5/onecall?lat=52.13&lon=21.00&appid=${API_key}&lang=ru&units=metric`;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      api: undefined,\n      ex: undefined,\n      temp: undefined,\n      city: undefined,\n      pressure: undefined,\n      error: undefined\n    };\n\n    this.gettingWether = async e => {\n      e.preventDefault();\n      const exclude = e.target.elements.exclude.value;\n      const city = e.target.elements.city.value; //if(exclude === \"current\"){\n\n      if (city === \"London\") {\n        const api_url = await fetch(London_API);\n        const date = await api_url.json();\n        console.log(date);\n        this.setState({\n          api: date,\n          ex: exclude,\n          temp: date.current.temp,\n          city: date.timezone,\n          pressure: date.current.pressure,\n          error: \"\"\n        });\n      }\n\n      if (city === \"Moscow\") {\n        const api_url = await fetch(Moscow_API);\n        const date = await api_url.json();\n        console.log(date);\n        this.setState({\n          api: date,\n          temp: date.current.temp,\n          city: date.timezone,\n          pressure: date.current.pressure,\n          error: \"\"\n        });\n      }\n\n      if (city === \"Kiev\") {\n        const api_url = await fetch(Kiev_API);\n        const date = await api_url.json();\n        console.log(date);\n        this.setState({\n          api: date,\n          temp: date.current.temp,\n          city: date.timezone,\n          pressure: date.current.pressure,\n          error: \"\"\n        });\n      }\n\n      if (city === \"Warshawa\") {\n        const api_url = await fetch(Warshawa_API);\n        const date = await api_url.json();\n        console.log(date);\n        this.setState({\n          api: date,\n          temp: date.current.temp,\n          city: date.timezone,\n          pressure: date.current.pressure,\n          error: \"\"\n        });\n      } //}\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conteiner\",\n      children: [/*#__PURE__*/_jsxDEV(Mean, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        wetherMetod: this.gettingWether\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WetheAutt, {\n        temp: this.state.temp,\n        city: this.state.city,\n        pressure: this.state.pressure,\n        error: this.state.error,\n        api: this.state.api\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HurlyWeather, {\n        api: this.state.api,\n        exclude: this.state.ex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dmytrokurinnyi/Desktop/git/wethe_app/src/App.js"],"names":["React","I","Form","WetheAutt","HurlyWeather","API_key","London_API","Moscow_API","Kiev_API","Warshawa_API","App","Component","state","api","undefined","ex","temp","city","pressure","error","gettingWether","e","preventDefault","exclude","target","elements","value","api_url","fetch","date","json","console","log","setState","current","timezone","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport I from \"./components/mean\";\nimport Form from \"./components/form\";\nimport WetheAutt from \"./components/wethe _autt\";\nimport HurlyWeather from \"./components/HurlyWeather\";\n\nconst API_key = \"0ba9122c7db41155430fb755e75d71e0\";\nconst London_API = `https://api.openweathermap.org/data/2.5/onecall?lat=51.30&lon=0.07&appid=${API_key}&lang=ru&units=metric`;\nconst Moscow_API = `https://api.openweathermap.org/data/2.5/onecall?lat=55.45&lon=37.36&appid=${API_key}&lang=ru&units=metric`;\nconst Kiev_API = `https://api.openweathermap.org/data/2.5/onecall?lat=50.27&lon=30.31&appid=${API_key}&lang=ru&units=metric`;\nconst Warshawa_API = `https://api.openweathermap.org/data/2.5/onecall?lat=52.13&lon=21.00&appid=${API_key}&lang=ru&units=metric`;\n\n\n\nclass App extends React.Component {\n  state={\n    api:undefined,\n    ex:undefined,\n    temp:undefined,\n    city:undefined,\n    pressure: undefined,\n    error:undefined\n\n  }\n\n  //getPosition = ()=>{\n  //  navigator.geolocation.getCurrentPosition((pos)=>{\n  //     const lat= pos.coords.latitude\n  //     const lon= pos.coords.longitude\n  //     console.log(lat,lon)\n  //     \n  //  })\n//}\n  gettingWether = async(e)=>{\n    e.preventDefault();\n    const exclude = e.target.elements.exclude.value;\n    const city = e.target.elements.city.value;\n   \n\n    //if(exclude === \"current\"){\n    if(city === \"London\"){\n    const api_url = await\n    fetch(London_API)\n    const date = await api_url.json()\n    console.log(date)\n\n  \n    this.setState({\n      api:date,\n      ex:exclude,\n      temp:date.current.temp,\n      city:date.timezone,\n      pressure:date.current.pressure,\n      error:\"\"\n\n\n    })\n\n  }\n  if(city === \"Moscow\"){\n    const api_url = await\n    fetch(Moscow_API)\n    const date = await api_url.json()\n    console.log(date)\n\n  \n    this.setState({\n      api:date,\n      temp:date.current.temp,\n      city:date.timezone,\n      pressure:date.current.pressure,\n      error:\"\"\n\n\n    })\n  }\n  if(city === \"Kiev\"){\n    const api_url = await\n    fetch(Kiev_API)\n    const date = await api_url.json()\n    console.log(date)\n\n  \n    this.setState({\n      api:date,\n      temp:date.current.temp,\n      city:date.timezone,\n      pressure:date.current.pressure,\n      error:\"\"\n\n\n    })\n  }\n  if(city === \"Warshawa\"){\n    const api_url = await\n    fetch(Warshawa_API)\n    const date = await api_url.json()\n    console.log(date)\n\n  \n    this.setState({\n      api:date,\n      temp:date.current.temp,\n      city:date.timezone,\n      pressure:date.current.pressure,\n      error:\"\"\n\n\n    })\n  }\n  \n\n//}\n  }\n  render(){\n    return(\n      <div className=\"conteiner\">\n        <Mean/>\n        <Form \n        wetherMetod = {this.gettingWether}/>\n        <WetheAutt\n        temp={this.state.temp}\n        city={this.state.city}\n        pressure={this.state.pressure}\n        error  = {this.state.error}\n        api = {this.state.api}\n        />\n        <HurlyWeather api = {this.state.api}\n         exclude = {this.state.ex}/>\n      </div>\n\n      \n\n    );\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}